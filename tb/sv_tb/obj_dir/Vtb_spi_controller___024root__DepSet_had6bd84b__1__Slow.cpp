// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Design implementation internals
// See Vtb_spi_controller.h for the primary calling header

#include "Vtb_spi_controller__pch.h"
#include "Vtb_spi_controller__Syms.h"
#include "Vtb_spi_controller___024root.h"

VL_ATTR_COLD void Vtb_spi_controller___024root___configure_coverage(Vtb_spi_controller___024root* vlSelf, bool first) {
    VL_DEBUG_IF(VL_DBG_MSGF("+    Vtb_spi_controller___024root___configure_coverage\n"); );
    Vtb_spi_controller__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    auto& vlSelfRef = std::ref(*vlSelf).get();
    // Body
    (void)first;  // Prevent unused variable warning
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[0]), first, "tb_spi_controller.sv", 25, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pclk", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1]), first, "tb_spi_controller.sv", 26, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "presetn", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[2]), first, "tb_spi_controller.sv", 29, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "psel", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[3]), first, "tb_spi_controller.sv", 30, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "penable", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[4]), first, "tb_spi_controller.sv", 31, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwrite", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[5]), first, "tb_spi_controller.sv", 32, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "paddr[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[6]), first, "tb_spi_controller.sv", 32, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "paddr[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[7]), first, "tb_spi_controller.sv", 32, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "paddr[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[8]), first, "tb_spi_controller.sv", 32, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "paddr[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[9]), first, "tb_spi_controller.sv", 32, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "paddr[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[10]), first, "tb_spi_controller.sv", 32, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "paddr[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[11]), first, "tb_spi_controller.sv", 32, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "paddr[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[12]), first, "tb_spi_controller.sv", 32, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "paddr[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[13]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[14]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[15]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[16]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[17]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[18]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[19]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[20]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[21]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[22]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[23]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[24]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[25]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[26]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[27]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[28]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[29]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[30]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[31]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[32]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[33]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[34]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[35]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[36]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[37]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[38]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[39]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[40]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[41]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[42]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[43]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[44]), first, "tb_spi_controller.sv", 33, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pwdata[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[45]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[46]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[47]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[48]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[49]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[50]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[51]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[52]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[53]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[54]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[55]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[56]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[57]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[58]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[59]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[60]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[61]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[62]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[63]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[64]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[65]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[66]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[67]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[68]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[69]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[70]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[71]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[72]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[73]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[74]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[75]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[76]), first, "tb_spi_controller.sv", 34, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "prdata[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[77]), first, "tb_spi_controller.sv", 35, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pready", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[78]), first, "tb_spi_controller.sv", 36, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "pslverr", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[79]), first, "tb_spi_controller.sv", 39, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "spi_clk", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[80]), first, "tb_spi_controller.sv", 40, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "spi_mosi", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[81]), first, "tb_spi_controller.sv", 41, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "spi_miso", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[82]), first, "tb_spi_controller.sv", 42, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "spi_csn", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[83]), first, "tb_spi_controller.sv", 45, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "spi_irq", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[84]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[0][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[85]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[0][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[86]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[0][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[87]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[0][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[88]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[0][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[89]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[0][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[90]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[0][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[91]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[0][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[92]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[1][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[93]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[1][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[94]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[1][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[95]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[1][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[96]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[1][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[97]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[1][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[98]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[1][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[99]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[1][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[100]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[2][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[101]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[2][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[102]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[2][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[103]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[2][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[104]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[2][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[105]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[2][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[106]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[2][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[107]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[2][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[108]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[3][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[109]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[3][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[110]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[3][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[111]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[3][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[112]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[3][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[113]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[3][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[114]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[3][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[115]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[3][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[116]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[4][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[117]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[4][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[118]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[4][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[119]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[4][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[120]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[4][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[121]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[4][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[122]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[4][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[123]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[4][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[124]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[5][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[125]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[5][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[126]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[5][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[127]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[5][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[128]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[5][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[129]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[5][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[130]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[5][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[131]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[5][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[132]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[6][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[133]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[6][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[134]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[6][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[135]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[6][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[136]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[6][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[137]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[6][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[138]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[6][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[139]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[6][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[140]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[7][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[141]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[7][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[142]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[7][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[143]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[7][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[144]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[7][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[145]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[7][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[146]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[7][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[147]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[7][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[148]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[8][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[149]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[8][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[150]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[8][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[151]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[8][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[152]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[8][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[153]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[8][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[154]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[8][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[155]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[8][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[156]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[9][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[157]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[9][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[158]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[9][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[159]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[9][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[160]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[9][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[161]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[9][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[162]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[9][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[163]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[9][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[164]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[10][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[165]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[10][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[166]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[10][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[167]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[10][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[168]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[10][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[169]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[10][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[170]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[10][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[171]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[10][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[172]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[11][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[173]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[11][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[174]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[11][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[175]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[11][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[176]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[11][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[177]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[11][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[178]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[11][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[179]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[11][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[180]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[12][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[181]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[12][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[182]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[12][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[183]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[12][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[184]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[12][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[185]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[12][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[186]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[12][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[187]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[12][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[188]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[13][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[189]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[13][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[190]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[13][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[191]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[13][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[192]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[13][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[193]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[13][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[194]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[13][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[195]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[13][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[196]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[14][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[197]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[14][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[198]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[14][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[199]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[14][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[200]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[14][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[201]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[14][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[202]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[14][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[203]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[14][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[204]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[15][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[205]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[15][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[206]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[15][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[207]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[15][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[208]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[15][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[209]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[15][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[210]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[15][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[211]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[15][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[212]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[16][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[213]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[16][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[214]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[16][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[215]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[16][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[216]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[16][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[217]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[16][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[218]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[16][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[219]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[16][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[220]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[17][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[221]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[17][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[222]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[17][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[223]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[17][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[224]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[17][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[225]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[17][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[226]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[17][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[227]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[17][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[228]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[18][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[229]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[18][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[230]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[18][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[231]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[18][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[232]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[18][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[233]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[18][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[234]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[18][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[235]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[18][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[236]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[19][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[237]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[19][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[238]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[19][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[239]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[19][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[240]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[19][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[241]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[19][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[242]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[19][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[243]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[19][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[244]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[20][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[245]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[20][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[246]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[20][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[247]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[20][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[248]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[20][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[249]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[20][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[250]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[20][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[251]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[20][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[252]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[21][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[253]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[21][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[254]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[21][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[255]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[21][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[256]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[21][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[257]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[21][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[258]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[21][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[259]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[21][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[260]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[22][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[261]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[22][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[262]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[22][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[263]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[22][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[264]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[22][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[265]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[22][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[266]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[22][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[267]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[22][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[268]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[23][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[269]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[23][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[270]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[23][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[271]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[23][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[272]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[23][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[273]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[23][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[274]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[23][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[275]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[23][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[276]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[24][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[277]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[24][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[278]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[24][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[279]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[24][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[280]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[24][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[281]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[24][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[282]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[24][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[283]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[24][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[284]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[25][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[285]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[25][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[286]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[25][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[287]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[25][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[288]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[25][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[289]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[25][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[290]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[25][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[291]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[25][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[292]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[26][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[293]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[26][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[294]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[26][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[295]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[26][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[296]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[26][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[297]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[26][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[298]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[26][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[299]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[26][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[300]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[27][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[301]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[27][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[302]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[27][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[303]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[27][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[304]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[27][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[305]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[27][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[306]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[27][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[307]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[27][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[308]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[28][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[309]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[28][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[310]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[28][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[311]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[28][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[312]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[28][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[313]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[28][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[314]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[28][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[315]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[28][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[316]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[29][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[317]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[29][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[318]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[29][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[319]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[29][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[320]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[29][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[321]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[29][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[322]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[29][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[323]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[29][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[324]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[30][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[325]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[30][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[326]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[30][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[327]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[30][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[328]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[30][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[329]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[30][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[330]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[30][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[331]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[30][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[332]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[31][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[333]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[31][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[334]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[31][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[335]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[31][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[336]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[31][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[337]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[31][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[338]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[31][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[339]), first, "tb_spi_controller.sv", 48, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "test_data[31][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[340]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[0][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[341]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[0][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[342]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[0][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[343]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[0][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[344]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[0][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[345]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[0][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[346]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[0][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[347]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[0][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[348]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[1][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[349]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[1][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[350]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[1][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[351]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[1][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[352]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[1][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[353]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[1][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[354]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[1][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[355]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[1][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[356]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[2][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[357]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[2][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[358]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[2][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[359]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[2][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[360]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[2][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[361]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[2][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[362]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[2][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[363]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[2][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[364]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[3][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[365]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[3][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[366]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[3][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[367]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[3][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[368]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[3][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[369]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[3][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[370]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[3][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[371]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[3][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[372]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[4][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[373]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[4][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[374]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[4][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[375]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[4][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[376]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[4][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[377]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[4][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[378]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[4][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[379]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[4][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[380]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[5][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[381]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[5][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[382]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[5][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[383]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[5][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[384]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[5][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[385]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[5][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[386]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[5][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[387]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[5][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[388]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[6][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[389]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[6][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[390]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[6][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[391]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[6][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[392]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[6][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[393]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[6][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[394]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[6][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[395]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[6][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[396]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[7][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[397]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[7][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[398]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[7][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[399]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[7][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[400]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[7][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[401]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[7][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[402]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[7][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[403]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[7][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[404]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[8][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[405]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[8][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[406]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[8][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[407]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[8][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[408]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[8][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[409]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[8][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[410]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[8][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[411]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[8][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[412]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[9][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[413]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[9][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[414]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[9][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[415]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[9][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[416]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[9][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[417]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[9][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[418]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[9][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[419]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[9][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[420]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[10][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[421]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[10][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[422]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[10][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[423]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[10][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[424]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[10][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[425]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[10][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[426]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[10][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[427]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[10][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[428]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[11][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[429]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[11][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[430]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[11][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[431]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[11][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[432]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[11][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[433]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[11][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[434]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[11][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[435]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[11][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[436]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[12][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[437]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[12][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[438]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[12][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[439]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[12][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[440]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[12][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[441]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[12][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[442]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[12][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[443]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[12][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[444]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[13][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[445]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[13][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[446]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[13][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[447]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[13][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[448]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[13][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[449]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[13][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[450]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[13][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[451]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[13][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[452]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[14][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[453]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[14][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[454]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[14][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[455]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[14][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[456]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[14][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[457]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[14][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[458]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[14][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[459]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[14][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[460]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[15][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[461]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[15][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[462]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[15][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[463]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[15][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[464]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[15][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[465]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[15][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[466]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[15][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[467]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[15][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[468]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[16][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[469]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[16][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[470]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[16][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[471]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[16][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[472]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[16][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[473]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[16][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[474]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[16][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[475]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[16][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[476]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[17][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[477]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[17][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[478]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[17][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[479]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[17][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[480]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[17][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[481]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[17][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[482]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[17][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[483]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[17][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[484]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[18][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[485]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[18][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[486]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[18][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[487]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[18][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[488]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[18][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[489]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[18][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[490]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[18][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[491]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[18][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[492]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[19][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[493]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[19][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[494]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[19][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[495]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[19][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[496]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[19][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[497]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[19][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[498]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[19][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[499]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[19][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[500]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[20][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[501]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[20][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[502]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[20][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[503]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[20][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[504]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[20][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[505]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[20][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[506]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[20][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[507]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[20][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[508]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[21][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[509]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[21][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[510]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[21][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[511]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[21][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[512]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[21][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[513]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[21][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[514]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[21][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[515]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[21][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[516]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[22][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[517]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[22][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[518]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[22][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[519]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[22][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[520]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[22][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[521]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[22][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[522]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[22][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[523]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[22][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[524]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[23][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[525]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[23][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[526]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[23][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[527]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[23][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[528]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[23][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[529]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[23][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[530]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[23][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[531]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[23][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[532]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[24][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[533]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[24][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[534]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[24][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[535]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[24][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[536]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[24][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[537]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[24][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[538]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[24][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[539]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[24][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[540]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[25][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[541]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[25][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[542]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[25][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[543]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[25][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[544]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[25][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[545]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[25][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[546]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[25][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[547]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[25][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[548]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[26][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[549]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[26][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[550]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[26][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[551]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[26][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[552]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[26][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[553]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[26][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[554]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[26][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[555]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[26][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[556]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[27][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[557]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[27][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[558]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[27][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[559]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[27][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[560]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[27][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[561]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[27][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[562]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[27][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[563]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[27][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[564]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[28][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[565]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[28][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[566]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[28][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[567]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[28][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[568]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[28][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[569]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[28][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[570]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[28][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[571]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[28][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[572]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[29][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[573]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[29][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[574]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[29][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[575]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[29][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[576]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[29][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[577]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[29][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[578]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[29][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[579]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[29][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[580]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[30][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[581]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[30][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[582]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[30][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[583]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[30][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[584]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[30][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[585]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[30][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[586]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[30][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[587]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[30][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[588]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[31][0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[589]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[31][1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[590]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[31][2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[591]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[31][3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[592]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[31][4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[593]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[31][5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[594]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[31][6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[595]), first, "tb_spi_controller.sv", 49, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "received_data[31][7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[596]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[597]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[598]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[599]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[600]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[601]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[602]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[603]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[604]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[605]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[606]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[607]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[608]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[609]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[610]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[611]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[612]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[613]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[614]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[615]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[616]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[617]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[618]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[619]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[620]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[621]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[622]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[623]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[624]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[625]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[626]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[627]), first, "tb_spi_controller.sv", 53, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "status[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[628]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[629]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[630]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[631]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[632]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[633]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[634]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[635]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[636]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[637]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[638]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[639]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[640]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[641]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[642]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[643]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[644]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[645]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[646]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[647]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[648]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[649]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[650]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[651]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[652]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[653]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[654]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[655]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[656]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[657]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[658]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[659]), first, "tb_spi_controller.sv", 54, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_status[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[660]), first, "tb_spi_controller.sv", 62, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "spi_mode_test[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[661]), first, "tb_spi_controller.sv", 62, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "spi_mode_test[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[662]), first, "tb_spi_controller.sv", 63, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "fifo_overflow_detected", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[663]), first, "tb_spi_controller.sv", 64, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "fifo_underflow_detected", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[664]), first, "tb_spi_controller.sv", 65, 17, ".tb_spi_controller", "v_toggle/tb_spi_controller", "interrupt_generated", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[665]), first, "tb_spi_controller.sv", 70, 27, ".tb_spi_controller", "v_expr/tb_spi_controller", "(pclk==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[666]), first, "tb_spi_controller.sv", 70, 27, ".tb_spi_controller", "v_expr/tb_spi_controller", "(pclk==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[667]), first, "tb_spi_controller.sv", 70, 9, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "70");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[668]), first, "tb_spi_controller.sv", 68, 5, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "68-69");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[669]), first, "tb_spi_controller.sv", 93, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_data[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[670]), first, "tb_spi_controller.sv", 93, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_data[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[671]), first, "tb_spi_controller.sv", 93, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_data[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[672]), first, "tb_spi_controller.sv", 93, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_data[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[673]), first, "tb_spi_controller.sv", 93, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_data[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[674]), first, "tb_spi_controller.sv", 93, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_data[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[675]), first, "tb_spi_controller.sv", 93, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_data[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[81]), first, "tb_spi_controller.sv", 93, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_data[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[676]), first, "tb_spi_controller.sv", 94, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_rx_data[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[677]), first, "tb_spi_controller.sv", 94, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_rx_data[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[678]), first, "tb_spi_controller.sv", 94, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_rx_data[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[679]), first, "tb_spi_controller.sv", 94, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_rx_data[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[680]), first, "tb_spi_controller.sv", 94, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_rx_data[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[681]), first, "tb_spi_controller.sv", 94, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_rx_data[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[682]), first, "tb_spi_controller.sv", 94, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_rx_data[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[683]), first, "tb_spi_controller.sv", 94, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_rx_data[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[684]), first, "tb_spi_controller.sv", 95, 15, ".tb_spi_controller", "v_toggle/tb_spi_controller", "slave_rx_valid", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[685]), first, "tb_spi_controller.sv", 105, 13, ".tb_spi_controller", "v_branch/tb_spi_controller", "if", "105-106");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[686]), first, "tb_spi_controller.sv", 105, 14, ".tb_spi_controller", "v_branch/tb_spi_controller", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[687]), first, "tb_spi_controller.sv", 102, 18, ".tb_spi_controller", "v_branch/tb_spi_controller", "if", "102,104");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[688]), first, "tb_spi_controller.sv", 102, 19, ".tb_spi_controller", "v_branch/tb_spi_controller", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[689]), first, "tb_spi_controller.sv", 102, 22, ".tb_spi_controller", "v_expr/tb_spi_controller", "(spi_csn==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[690]), first, "tb_spi_controller.sv", 102, 22, ".tb_spi_controller", "v_expr/tb_spi_controller", "(spi_csn==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[691]), first, "tb_spi_controller.sv", 98, 9, ".tb_spi_controller", "v_line/tb_spi_controller", "elsif", "98-101");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[692]), first, "tb_spi_controller.sv", 98, 13, ".tb_spi_controller", "v_expr/tb_spi_controller", "(presetn==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[693]), first, "tb_spi_controller.sv", 98, 13, ".tb_spi_controller", "v_expr/tb_spi_controller", "(presetn==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[694]), first, "tb_spi_controller.sv", 97, 5, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "97");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[695]), first, "tb_spi_controller.sv", 114, 10, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "114,117-123,125-126,128-130");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[696]), first, "tb_spi_controller.sv", 135, 10, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "135,138-143,145-146,148-151");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[697]), first, "tb_spi_controller.sv", 173, 13, ".tb_spi_controller", "v_branch/tb_spi_controller", "if", "173-175");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[698]), first, "tb_spi_controller.sv", 173, 14, ".tb_spi_controller", "v_branch/tb_spi_controller", "else", "176-178");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[699]), first, "tb_spi_controller.sv", 156, 10, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "156,159-160,163,166,169,172");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[700]), first, "tb_spi_controller.sv", 193, 13, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "193-195");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[701]), first, "tb_spi_controller.sv", 200, 13, ".tb_spi_controller", "v_branch/tb_spi_controller", "if", "200-203");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[702]), first, "tb_spi_controller.sv", 200, 14, ".tb_spi_controller", "v_branch/tb_spi_controller", "else", "204-206");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[703]), first, "tb_spi_controller.sv", 184, 10, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "184-186,189-190,193,199");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[704]), first, "tb_spi_controller.sv", 225, 13, ".tb_spi_controller", "v_branch/tb_spi_controller", "if", "225-228");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[705]), first, "tb_spi_controller.sv", 225, 14, ".tb_spi_controller", "v_branch/tb_spi_controller", "else", "229-231");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[706]), first, "tb_spi_controller.sv", 212, 10, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "212-214,217-218,221,224");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[707]), first, "tb_spi_controller.sv", 251, 13, ".tb_spi_controller", "v_branch/tb_spi_controller", "if", "251-254,257-258");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[708]), first, "tb_spi_controller.sv", 251, 14, ".tb_spi_controller", "v_branch/tb_spi_controller", "else", "259-261");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[709]), first, "tb_spi_controller.sv", 237, 10, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "237-239,242,245,248");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[710]), first, "tb_spi_controller.sv", 279, 13, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "279-282");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[711]), first, "tb_spi_controller.sv", 267, 10, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "267-269,271-272,275-276,279,285,287-290,292");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[712]), first, "tb_spi_controller.sv", 313, 9, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "313-314");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[713]), first, "tb_spi_controller.sv", 376, 9, ".tb_spi_controller", "v_branch/tb_spi_controller", "if", "376-378");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[714]), first, "tb_spi_controller.sv", 376, 10, ".tb_spi_controller", "v_branch/tb_spi_controller", "else", "379-381");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[715]), first, "tb_spi_controller.sv", 387, 39, ".tb_spi_controller", "v_expr/tb_spi_controller", "(fifo_overflow_detected==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[716]), first, "tb_spi_controller.sv", 387, 39, ".tb_spi_controller", "v_expr/tb_spi_controller", "(fifo_overflow_detected==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[717]), first, "tb_spi_controller.sv", 388, 40, ".tb_spi_controller", "v_expr/tb_spi_controller", "(fifo_underflow_detected==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[718]), first, "tb_spi_controller.sv", 388, 40, ".tb_spi_controller", "v_expr/tb_spi_controller", "(fifo_underflow_detected==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[719]), first, "tb_spi_controller.sv", 389, 46, ".tb_spi_controller", "v_expr/tb_spi_controller", "(interrupt_generated==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[720]), first, "tb_spi_controller.sv", 389, 46, ".tb_spi_controller", "v_expr/tb_spi_controller", "(interrupt_generated==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[721]), first, "tb_spi_controller.sv", 399, 9, ".tb_spi_controller", "v_branch/tb_spi_controller", "if", "399-400");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[722]), first, "tb_spi_controller.sv", 399, 10, ".tb_spi_controller", "v_branch/tb_spi_controller", "else", "401-402");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[723]), first, "tb_spi_controller.sv", 297, 5, ".tb_spi_controller", "v_line/tb_spi_controller", "block", "297,299-310,313,318-320,323-324,326-327,329-331,334-335,338,341,344,347,350-352,355-357,360-362,365-367,370-371,373-374,385-389,392-397,405");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[0]), first, "../../rtl/spi_controller.sv", 22, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pclk_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1]), first, "../../rtl/spi_controller.sv", 23, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "presetn_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[2]), first, "../../rtl/spi_controller.sv", 26, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "psel_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[3]), first, "../../rtl/spi_controller.sv", 27, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "penable_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[4]), first, "../../rtl/spi_controller.sv", 28, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwrite_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[5]), first, "../../rtl/spi_controller.sv", 29, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "paddr_i[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[6]), first, "../../rtl/spi_controller.sv", 29, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "paddr_i[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[7]), first, "../../rtl/spi_controller.sv", 29, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "paddr_i[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[8]), first, "../../rtl/spi_controller.sv", 29, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "paddr_i[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[9]), first, "../../rtl/spi_controller.sv", 29, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "paddr_i[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[10]), first, "../../rtl/spi_controller.sv", 29, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "paddr_i[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[11]), first, "../../rtl/spi_controller.sv", 29, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "paddr_i[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[12]), first, "../../rtl/spi_controller.sv", 29, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "paddr_i[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[13]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[14]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[15]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[16]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[17]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[18]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[19]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[20]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[21]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[22]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[23]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[24]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[25]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[26]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[27]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[28]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[29]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[30]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[31]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[32]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[33]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[34]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[35]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[36]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[37]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[38]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[39]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[40]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[41]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[42]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[43]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[44]), first, "../../rtl/spi_controller.sv", 30, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pwdata_i[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[45]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[46]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[47]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[48]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[49]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[50]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[51]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[52]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[53]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[54]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[55]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[56]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[57]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[58]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[59]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[60]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[61]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[62]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[63]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[64]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[65]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[66]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[67]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[68]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[69]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[70]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[71]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[72]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[73]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[74]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[75]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[76]), first, "../../rtl/spi_controller.sv", 31, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "prdata_o[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[77]), first, "../../rtl/spi_controller.sv", 32, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pready_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[78]), first, "../../rtl/spi_controller.sv", 33, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "pslverr_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[79]), first, "../../rtl/spi_controller.sv", 36, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_clk_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[80]), first, "../../rtl/spi_controller.sv", 37, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_mosi_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[81]), first, "../../rtl/spi_controller.sv", 38, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_miso_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[82]), first, "../../rtl/spi_controller.sv", 39, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_csn_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[83]), first, "../../rtl/spi_controller.sv", 42, 25, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_irq_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[724]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[725]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[726]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[727]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[728]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[729]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[730]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[731]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[732]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[733]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[734]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[735]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[736]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[737]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[738]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[739]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[740]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[741]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[742]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[743]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[744]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[745]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[746]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[747]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[748]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[749]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[750]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[751]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[752]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[753]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[754]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[755]), first, "../../rtl/spi_controller.sv", 46, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "ctrl_reg[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[756]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[757]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[758]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[759]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[760]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[761]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[762]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[763]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[764]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[765]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[766]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[767]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[768]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[769]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[770]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[771]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[772]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[773]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[774]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[775]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[776]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[777]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[778]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[779]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[780]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[781]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[782]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[783]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[784]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[785]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[786]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[787]), first, "../../rtl/spi_controller.sv", 47, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "stat_reg[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[788]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[789]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[790]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[791]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[792]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[793]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[794]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[795]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[796]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[797]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[798]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[799]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[800]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[801]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[802]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[803]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[804]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[805]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[806]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[807]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[808]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[809]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[810]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[811]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[812]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[813]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[814]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[815]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[816]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[817]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[818]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[819]), first, "../../rtl/spi_controller.sv", 48, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "txdata_reg[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[820]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[821]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[822]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[823]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[824]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[825]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[826]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[827]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[828]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[829]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[830]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[831]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[832]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[833]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[834]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[835]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[836]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[837]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[838]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[839]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[840]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[841]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[842]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[843]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[844]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[845]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[846]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[847]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[848]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[849]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[850]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[851]), first, "../../rtl/spi_controller.sv", 49, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rxdata_reg[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[852]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[853]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[854]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[855]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[856]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[857]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[858]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[859]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[860]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[861]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[862]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[863]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[864]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[865]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[866]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[867]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[868]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[869]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[870]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[871]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[872]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[873]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[874]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[875]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[876]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[877]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[878]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[879]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[880]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[881]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[882]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[883]), first, "../../rtl/spi_controller.sv", 50, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "baud_reg[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[884]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[885]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[886]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[887]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[888]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[889]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[890]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[891]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[892]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[893]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[894]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[895]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[896]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[897]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[898]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[899]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[900]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[901]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[902]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[903]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[904]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[905]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[906]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[907]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[908]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[909]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[910]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[911]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[912]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[913]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[914]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[915]), first, "../../rtl/spi_controller.sv", 51, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "fifo_reg[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[916]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[917]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[918]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[919]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[920]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[921]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[922]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[923]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[924]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[925]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[926]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[927]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[928]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[929]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[930]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[931]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[932]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[933]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[934]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[935]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[936]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[937]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[938]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[939]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[940]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[941]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[942]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[943]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[944]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[945]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[946]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[947]), first, "../../rtl/spi_controller.sv", 52, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "int_reg[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[948]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[949]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[950]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[951]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[952]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[953]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[954]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[955]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[956]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[957]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[958]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[959]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[960]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[961]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[962]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[963]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[964]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[965]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[966]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[967]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[968]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[969]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[970]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[971]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[972]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[973]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[974]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[975]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[976]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[977]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[978]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[979]), first, "../../rtl/spi_controller.sv", 53, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "mode_reg[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[980]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[981]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[982]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[983]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[984]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[985]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[986]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[987]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[988]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[989]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[990]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[991]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[992]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[993]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[994]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[995]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[996]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[997]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[998]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[999]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1000]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1001]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1002]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1003]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1004]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1005]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1006]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1007]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1008]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1009]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1010]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1011]), first, "../../rtl/spi_controller.sv", 56, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_data[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1012]), first, "../../rtl/spi_controller.sv", 57, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_wr", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1013]), first, "../../rtl/spi_controller.sv", 58, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_rd", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1014]), first, "../../rtl/spi_controller.sv", 59, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_full", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1015]), first, "../../rtl/spi_controller.sv", 60, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_empty", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1016]), first, "../../rtl/spi_controller.sv", 61, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_level[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1017]), first, "../../rtl/spi_controller.sv", 61, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_level[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1018]), first, "../../rtl/spi_controller.sv", 61, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_level[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1019]), first, "../../rtl/spi_controller.sv", 61, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_level[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1020]), first, "../../rtl/spi_controller.sv", 61, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_level[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1021]), first, "../../rtl/spi_controller.sv", 61, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_level[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1022]), first, "../../rtl/spi_controller.sv", 61, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_level[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1023]), first, "../../rtl/spi_controller.sv", 61, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "tx_fifo_level[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1024]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1025]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1026]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1027]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1028]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1029]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1030]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1031]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1032]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1033]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1034]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1035]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1036]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1037]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1038]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1039]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1040]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[16]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1041]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[17]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1042]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[18]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1043]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[19]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1044]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[20]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1045]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[21]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1046]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[22]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1047]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[23]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1048]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[24]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1049]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[25]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1050]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[26]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1051]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[27]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1052]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[28]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1053]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[29]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1054]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[30]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1055]), first, "../../rtl/spi_controller.sv", 63, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_data[31]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1056]), first, "../../rtl/spi_controller.sv", 64, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_wr", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1057]), first, "../../rtl/spi_controller.sv", 65, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_rd", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1058]), first, "../../rtl/spi_controller.sv", 66, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_full", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1059]), first, "../../rtl/spi_controller.sv", 67, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_empty", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1060]), first, "../../rtl/spi_controller.sv", 68, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_level[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1061]), first, "../../rtl/spi_controller.sv", 68, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_level[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1062]), first, "../../rtl/spi_controller.sv", 68, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_level[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1063]), first, "../../rtl/spi_controller.sv", 68, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_level[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1064]), first, "../../rtl/spi_controller.sv", 68, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_level[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1065]), first, "../../rtl/spi_controller.sv", 68, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_level[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1066]), first, "../../rtl/spi_controller.sv", 68, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_level[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1067]), first, "../../rtl/spi_controller.sv", 68, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "rx_fifo_level[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1068]), first, "../../rtl/spi_controller.sv", 71, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_busy", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1056]), first, "../../rtl/spi_controller.sv", 72, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_done", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1069]), first, "../../rtl/spi_controller.sv", 73, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_tx_data[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1070]), first, "../../rtl/spi_controller.sv", 73, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_tx_data[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1071]), first, "../../rtl/spi_controller.sv", 73, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_tx_data[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1072]), first, "../../rtl/spi_controller.sv", 73, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_tx_data[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1073]), first, "../../rtl/spi_controller.sv", 73, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_tx_data[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1074]), first, "../../rtl/spi_controller.sv", 73, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_tx_data[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1075]), first, "../../rtl/spi_controller.sv", 73, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_tx_data[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1076]), first, "../../rtl/spi_controller.sv", 73, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_tx_data[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1077]), first, "../../rtl/spi_controller.sv", 74, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_rx_data[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1078]), first, "../../rtl/spi_controller.sv", 74, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_rx_data[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1079]), first, "../../rtl/spi_controller.sv", 74, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_rx_data[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1080]), first, "../../rtl/spi_controller.sv", 74, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_rx_data[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1081]), first, "../../rtl/spi_controller.sv", 74, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_rx_data[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1082]), first, "../../rtl/spi_controller.sv", 74, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_rx_data[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1083]), first, "../../rtl/spi_controller.sv", 74, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_rx_data[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1084]), first, "../../rtl/spi_controller.sv", 74, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_rx_data[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1085]), first, "../../rtl/spi_controller.sv", 75, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_data_valid", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1086]), first, "../../rtl/spi_controller.sv", 76, 18, ".tb_spi_controller.dut", "v_toggle/spi_controller", "spi_data_ready", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1087]), first, "../../rtl/spi_controller.sv", 89, 26, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "89");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1088]), first, "../../rtl/spi_controller.sv", 90, 26, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "90");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1089]), first, "../../rtl/spi_controller.sv", 91, 26, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "91");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1090]), first, "../../rtl/spi_controller.sv", 92, 26, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "92");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1091]), first, "../../rtl/spi_controller.sv", 93, 26, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "93");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1092]), first, "../../rtl/spi_controller.sv", 87, 13, ".tb_spi_controller.dut", "v_branch/spi_controller", "if", "87-88");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1093]), first, "../../rtl/spi_controller.sv", 87, 14, ".tb_spi_controller.dut", "v_branch/spi_controller", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1094]), first, "../../rtl/spi_controller.sv", 87, 37, ".tb_spi_controller.dut", "v_expr/spi_controller", "(psel_i==1 && penable_i==1 && pwrite_i==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1095]), first, "../../rtl/spi_controller.sv", 87, 37, ".tb_spi_controller.dut", "v_expr/spi_controller", "(pwrite_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1096]), first, "../../rtl/spi_controller.sv", 87, 37, ".tb_spi_controller.dut", "v_expr/spi_controller", "(penable_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1097]), first, "../../rtl/spi_controller.sv", 87, 37, ".tb_spi_controller.dut", "v_expr/spi_controller", "(psel_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1098]), first, "../../rtl/spi_controller.sv", 80, 9, ".tb_spi_controller.dut", "v_branch/spi_controller", "if", "80-85");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1099]), first, "../../rtl/spi_controller.sv", 80, 10, ".tb_spi_controller.dut", "v_branch/spi_controller", "else", "86");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1100]), first, "../../rtl/spi_controller.sv", 80, 13, ".tb_spi_controller.dut", "v_expr/spi_controller", "(presetn_i==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1101]), first, "../../rtl/spi_controller.sv", 80, 13, ".tb_spi_controller.dut", "v_expr/spi_controller", "(presetn_i==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1102]), first, "../../rtl/spi_controller.sv", 79, 5, ".tb_spi_controller.dut", "v_line/spi_controller", "block", "79");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1103]), first, "../../rtl/spi_controller.sv", 102, 18, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "102");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1104]), first, "../../rtl/spi_controller.sv", 103, 18, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "103");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1105]), first, "../../rtl/spi_controller.sv", 104, 18, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "104");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1106]), first, "../../rtl/spi_controller.sv", 105, 18, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "105");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1107]), first, "../../rtl/spi_controller.sv", 106, 18, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "106");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1108]), first, "../../rtl/spi_controller.sv", 107, 18, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "107");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1109]), first, "../../rtl/spi_controller.sv", 108, 18, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "108");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1110]), first, "../../rtl/spi_controller.sv", 109, 13, ".tb_spi_controller.dut", "v_line/spi_controller", "case", "109");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1111]), first, "../../rtl/spi_controller.sv", 100, 5, ".tb_spi_controller.dut", "v_line/spi_controller", "block", "100-101");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1112]), first, "../../rtl/spi_controller.sv", 122, 13, ".tb_spi_controller.dut", "v_branch/spi_controller", "if", "122-124");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1113]), first, "../../rtl/spi_controller.sv", 122, 14, ".tb_spi_controller.dut", "v_branch/spi_controller", "else", "125-126");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1114]), first, "../../rtl/spi_controller.sv", 122, 49, ".tb_spi_controller.dut", "v_expr/spi_controller", "(psel_i==1 && penable_i==1 && pwrite_i==1 && (paddr_i[7:0] == 8'h8)==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1115]), first, "../../rtl/spi_controller.sv", 122, 49, ".tb_spi_controller.dut", "v_expr/spi_controller", "((paddr_i[7:0] == 8'h8)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1116]), first, "../../rtl/spi_controller.sv", 122, 49, ".tb_spi_controller.dut", "v_expr/spi_controller", "(pwrite_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1117]), first, "../../rtl/spi_controller.sv", 122, 49, ".tb_spi_controller.dut", "v_expr/spi_controller", "(penable_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1118]), first, "../../rtl/spi_controller.sv", 122, 49, ".tb_spi_controller.dut", "v_expr/spi_controller", "(psel_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1119]), first, "../../rtl/spi_controller.sv", 119, 9, ".tb_spi_controller.dut", "v_branch/spi_controller", "if", "119-120");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1120]), first, "../../rtl/spi_controller.sv", 119, 10, ".tb_spi_controller.dut", "v_branch/spi_controller", "else", "121");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1121]), first, "../../rtl/spi_controller.sv", 119, 13, ".tb_spi_controller.dut", "v_expr/spi_controller", "(presetn_i==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1122]), first, "../../rtl/spi_controller.sv", 119, 13, ".tb_spi_controller.dut", "v_expr/spi_controller", "(presetn_i==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1123]), first, "../../rtl/spi_controller.sv", 118, 5, ".tb_spi_controller.dut", "v_line/spi_controller", "block", "118");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1124]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[3]==1 && 1'h0==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1125]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[2]==1 && spi_done==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1126]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[1]==1 && rx_fifo_full==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1127]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[0]==1 && tx_fifo_empty==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1128]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(tx_fifo_empty==0 && rx_fifo_full==0 && spi_done==0 && 1'h0==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1129]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(tx_fifo_empty==0 && rx_fifo_full==0 && spi_done==0 && int_reg[3]==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1130]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(tx_fifo_empty==0 && rx_fifo_full==0 && int_reg[2]==0 && 1'h0==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1131]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(tx_fifo_empty==0 && rx_fifo_full==0 && int_reg[2]==0 && int_reg[3]==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1132]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(tx_fifo_empty==0 && int_reg[1]==0 && spi_done==0 && 1'h0==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1133]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(tx_fifo_empty==0 && int_reg[1]==0 && spi_done==0 && int_reg[3]==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1134]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(tx_fifo_empty==0 && int_reg[1]==0 && int_reg[2]==0 && 1'h0==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1135]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(tx_fifo_empty==0 && int_reg[1]==0 && int_reg[2]==0 && int_reg[3]==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1136]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[0]==0 && rx_fifo_full==0 && spi_done==0 && 1'h0==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1137]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[0]==0 && rx_fifo_full==0 && spi_done==0 && int_reg[3]==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1138]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[0]==0 && rx_fifo_full==0 && int_reg[2]==0 && 1'h0==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1139]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[0]==0 && rx_fifo_full==0 && int_reg[2]==0 && int_reg[3]==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1140]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[0]==0 && int_reg[1]==0 && spi_done==0 && 1'h0==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1141]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[0]==0 && int_reg[1]==0 && spi_done==0 && int_reg[3]==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1142]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[0]==0 && int_reg[1]==0 && int_reg[2]==0 && 1'h0==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1143]), first, "../../rtl/spi_controller.sv", 204, 50, ".tb_spi_controller.dut", "v_expr/spi_controller", "(int_reg[0]==0 && int_reg[1]==0 && int_reg[2]==0 && int_reg[3]==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1144]), first, "../../rtl/spi_controller.sv", 199, 9, ".tb_spi_controller.dut", "v_branch/spi_controller", "if", "199-200");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1145]), first, "../../rtl/spi_controller.sv", 199, 10, ".tb_spi_controller.dut", "v_branch/spi_controller", "else", "201-205");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1146]), first, "../../rtl/spi_controller.sv", 199, 13, ".tb_spi_controller.dut", "v_expr/spi_controller", "(presetn_i==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1147]), first, "../../rtl/spi_controller.sv", 199, 13, ".tb_spi_controller.dut", "v_expr/spi_controller", "(presetn_i==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1148]), first, "../../rtl/spi_controller.sv", 198, 5, ".tb_spi_controller.dut", "v_line/spi_controller", "block", "198");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[0]), first, "../../rtl/spi_protocol_engine.sv", 27, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1]), first, "../../rtl/spi_protocol_engine.sv", 28, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "reset_n_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[724]), first, "../../rtl/spi_protocol_engine.sv", 31, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "enable_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[948]), first, "../../rtl/spi_protocol_engine.sv", 32, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "mode_i[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[949]), first, "../../rtl/spi_protocol_engine.sv", 32, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "mode_i[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[852]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[853]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[854]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[855]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[856]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[857]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[858]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[859]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[860]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[861]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[862]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[863]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[864]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[865]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[866]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[867]), first, "../../rtl/spi_protocol_engine.sv", 33, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "baud_div_i[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1149]), first, "../../rtl/spi_protocol_engine.sv", 36, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_data_i[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1150]), first, "../../rtl/spi_protocol_engine.sv", 36, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_data_i[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1151]), first, "../../rtl/spi_protocol_engine.sv", 36, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_data_i[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1152]), first, "../../rtl/spi_protocol_engine.sv", 36, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_data_i[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1153]), first, "../../rtl/spi_protocol_engine.sv", 36, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_data_i[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1154]), first, "../../rtl/spi_protocol_engine.sv", 36, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_data_i[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1155]), first, "../../rtl/spi_protocol_engine.sv", 36, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_data_i[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1156]), first, "../../rtl/spi_protocol_engine.sv", 36, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_data_i[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1157]), first, "../../rtl/spi_protocol_engine.sv", 37, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_valid_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1013]), first, "../../rtl/spi_protocol_engine.sv", 38, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_ready_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1077]), first, "../../rtl/spi_protocol_engine.sv", 40, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_data_o[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1078]), first, "../../rtl/spi_protocol_engine.sv", 40, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_data_o[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1079]), first, "../../rtl/spi_protocol_engine.sv", 40, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_data_o[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1080]), first, "../../rtl/spi_protocol_engine.sv", 40, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_data_o[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1081]), first, "../../rtl/spi_protocol_engine.sv", 40, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_data_o[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1082]), first, "../../rtl/spi_protocol_engine.sv", 40, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_data_o[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1083]), first, "../../rtl/spi_protocol_engine.sv", 40, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_data_o[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1084]), first, "../../rtl/spi_protocol_engine.sv", 40, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_data_o[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1056]), first, "../../rtl/spi_protocol_engine.sv", 41, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_valid_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[79]), first, "../../rtl/spi_protocol_engine.sv", 44, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "spi_clk_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[80]), first, "../../rtl/spi_protocol_engine.sv", 45, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "spi_mosi_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[81]), first, "../../rtl/spi_protocol_engine.sv", 46, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "spi_miso_i", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[82]), first, "../../rtl/spi_protocol_engine.sv", 47, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "spi_csn_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1068]), first, "../../rtl/spi_protocol_engine.sv", 50, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "busy_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1056]), first, "../../rtl/spi_protocol_engine.sv", 51, 25, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "done_o", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1158]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1159]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1160]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1161]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1162]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1163]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1164]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1165]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1166]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[8]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1167]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[9]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1168]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[10]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1169]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[11]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1170]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[12]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1171]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[13]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1172]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[14]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1173]), first, "../../rtl/spi_protocol_engine.sv", 58, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "clk_counter[15]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[79]), first, "../../rtl/spi_protocol_engine.sv", 59, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "spi_clk_internal", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1174]), first, "../../rtl/spi_protocol_engine.sv", 60, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "bit_counter[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1175]), first, "../../rtl/spi_protocol_engine.sv", 60, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "bit_counter[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1176]), first, "../../rtl/spi_protocol_engine.sv", 60, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "bit_counter[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1177]), first, "../../rtl/spi_protocol_engine.sv", 61, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_shift_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1178]), first, "../../rtl/spi_protocol_engine.sv", 61, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_shift_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1179]), first, "../../rtl/spi_protocol_engine.sv", 61, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_shift_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1180]), first, "../../rtl/spi_protocol_engine.sv", 61, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_shift_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1181]), first, "../../rtl/spi_protocol_engine.sv", 61, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_shift_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1182]), first, "../../rtl/spi_protocol_engine.sv", 61, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_shift_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1183]), first, "../../rtl/spi_protocol_engine.sv", 61, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_shift_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[80]), first, "../../rtl/spi_protocol_engine.sv", 61, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "tx_shift_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1077]), first, "../../rtl/spi_protocol_engine.sv", 62, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_shift_reg[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1078]), first, "../../rtl/spi_protocol_engine.sv", 62, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_shift_reg[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1079]), first, "../../rtl/spi_protocol_engine.sv", 62, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_shift_reg[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1080]), first, "../../rtl/spi_protocol_engine.sv", 62, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_shift_reg[3]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1081]), first, "../../rtl/spi_protocol_engine.sv", 62, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_shift_reg[4]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1082]), first, "../../rtl/spi_protocol_engine.sv", 62, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_shift_reg[5]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1083]), first, "../../rtl/spi_protocol_engine.sv", 62, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_shift_reg[6]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1084]), first, "../../rtl/spi_protocol_engine.sv", 62, 30, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "rx_shift_reg[7]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[82]), first, "../../rtl/spi_protocol_engine.sv", 63, 31, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "spi_csn_internal", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[949]), first, "../../rtl/spi_protocol_engine.sv", 66, 11, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "cpol", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[948]), first, "../../rtl/spi_protocol_engine.sv", 67, 11, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "cpha", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1184]), first, "../../rtl/spi_protocol_engine.sv", 80, 37, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(spi_clk_internal==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1185]), first, "../../rtl/spi_protocol_engine.sv", 80, 37, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(spi_clk_internal==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1186]), first, "../../rtl/spi_protocol_engine.sv", 78, 13, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "78-80");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1187]), first, "../../rtl/spi_protocol_engine.sv", 78, 14, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "81-82");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1188]), first, "../../rtl/spi_protocol_engine.sv", 77, 18, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "if", "77");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1189]), first, "../../rtl/spi_protocol_engine.sv", 77, 19, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "else", "84-86");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1190]), first, "../../rtl/spi_protocol_engine.sv", 77, 31, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(enable_i==1 && busy_o==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1191]), first, "../../rtl/spi_protocol_engine.sv", 77, 31, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(busy_o==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1192]), first, "../../rtl/spi_protocol_engine.sv", 77, 31, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(enable_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1193]), first, "../../rtl/spi_protocol_engine.sv", 74, 9, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "elsif", "74-76");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1194]), first, "../../rtl/spi_protocol_engine.sv", 74, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1195]), first, "../../rtl/spi_protocol_engine.sv", 74, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1196]), first, "../../rtl/spi_protocol_engine.sv", 73, 5, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "block", "73");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1197]), first, "../../rtl/spi_protocol_engine.sv", 101, 13, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "current_state[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1198]), first, "../../rtl/spi_protocol_engine.sv", 101, 13, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "current_state[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1199]), first, "../../rtl/spi_protocol_engine.sv", 101, 13, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "current_state[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1200]), first, "../../rtl/spi_protocol_engine.sv", 101, 28, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "next_state[0]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1201]), first, "../../rtl/spi_protocol_engine.sv", 101, 28, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "next_state[1]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1202]), first, "../../rtl/spi_protocol_engine.sv", 101, 28, ".tb_spi_controller.dut.spi_engine", "v_toggle/spi_protocol_engine", "next_state[2]", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1203]), first, "../../rtl/spi_protocol_engine.sv", 105, 9, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "105-106");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1204]), first, "../../rtl/spi_protocol_engine.sv", 105, 10, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "107-108");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1205]), first, "../../rtl/spi_protocol_engine.sv", 105, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1206]), first, "../../rtl/spi_protocol_engine.sv", 105, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1207]), first, "../../rtl/spi_protocol_engine.sv", 104, 5, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "block", "104");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1208]), first, "../../rtl/spi_protocol_engine.sv", 118, 17, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "118-119");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1209]), first, "../../rtl/spi_protocol_engine.sv", 118, 18, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1210]), first, "../../rtl/spi_protocol_engine.sv", 118, 30, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(enable_i==1 && tx_valid_i==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1211]), first, "../../rtl/spi_protocol_engine.sv", 118, 30, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(tx_valid_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1212]), first, "../../rtl/spi_protocol_engine.sv", 118, 30, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(enable_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1213]), first, "../../rtl/spi_protocol_engine.sv", 117, 17, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "case", "117");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1214]), first, "../../rtl/spi_protocol_engine.sv", 124, 17, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "124-125");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1215]), first, "../../rtl/spi_protocol_engine.sv", 124, 18, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1216]), first, "../../rtl/spi_protocol_engine.sv", 124, 38, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((clk_counter == 32'sh0)==1 && (spi_clk_internal == (cpol ^ cpha))==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1217]), first, "../../rtl/spi_protocol_engine.sv", 124, 38, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((spi_clk_internal == (cpol ^ cpha))==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1218]), first, "../../rtl/spi_protocol_engine.sv", 124, 38, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((clk_counter == 32'sh0)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1219]), first, "../../rtl/spi_protocol_engine.sv", 123, 18, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "case", "123");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1220]), first, "../../rtl/spi_protocol_engine.sv", 130, 17, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "130-131");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1221]), first, "../../rtl/spi_protocol_engine.sv", 130, 18, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1222]), first, "../../rtl/spi_protocol_engine.sv", 130, 58, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((bit_counter == 32'sh7)==1 && (clk_counter == 32'sh0)==1 && (spi_clk_internal == (cpol ^ cpha))==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1223]), first, "../../rtl/spi_protocol_engine.sv", 130, 58, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((spi_clk_internal == (cpol ^ cpha))==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1224]), first, "../../rtl/spi_protocol_engine.sv", 130, 58, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((clk_counter == 32'sh0)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1225]), first, "../../rtl/spi_protocol_engine.sv", 130, 58, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((bit_counter == 32'sh7)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1226]), first, "../../rtl/spi_protocol_engine.sv", 129, 21, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "case", "129");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1227]), first, "../../rtl/spi_protocol_engine.sv", 136, 17, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "136-137");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1228]), first, "../../rtl/spi_protocol_engine.sv", 136, 18, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1229]), first, "../../rtl/spi_protocol_engine.sv", 136, 38, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((clk_counter == 32'sh0)==1 && (spi_clk_internal == cpol)==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1230]), first, "../../rtl/spi_protocol_engine.sv", 136, 38, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((spi_clk_internal == cpol)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1231]), first, "../../rtl/spi_protocol_engine.sv", 136, 38, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((clk_counter == 32'sh0)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1232]), first, "../../rtl/spi_protocol_engine.sv", 135, 17, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "case", "135");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1233]), first, "../../rtl/spi_protocol_engine.sv", 141, 13, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "case", "141");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1234]), first, "../../rtl/spi_protocol_engine.sv", 113, 5, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "block", "113-114,116");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1235]), first, "../../rtl/spi_protocol_engine.sv", 151, 18, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "151-152");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1236]), first, "../../rtl/spi_protocol_engine.sv", 151, 19, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1237]), first, "../../rtl/spi_protocol_engine.sv", 151, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == TRANSFER)==1 && (clk_counter == 32'sh0)==1 && (spi_clk_internal == (cpol ^ cpha))==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1238]), first, "../../rtl/spi_protocol_engine.sv", 151, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((spi_clk_internal == (cpol ^ cpha))==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1239]), first, "../../rtl/spi_protocol_engine.sv", 151, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((clk_counter == 32'sh0)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1240]), first, "../../rtl/spi_protocol_engine.sv", 151, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == TRANSFER)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1241]), first, "../../rtl/spi_protocol_engine.sv", 149, 18, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "elsif", "149-150");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1242]), first, "../../rtl/spi_protocol_engine.sv", 147, 9, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "elsif", "147-148");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1243]), first, "../../rtl/spi_protocol_engine.sv", 147, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1244]), first, "../../rtl/spi_protocol_engine.sv", 147, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1245]), first, "../../rtl/spi_protocol_engine.sv", 146, 5, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "block", "146");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1246]), first, "../../rtl/spi_protocol_engine.sv", 162, 18, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "162-163");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1247]), first, "../../rtl/spi_protocol_engine.sv", 162, 19, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1248]), first, "../../rtl/spi_protocol_engine.sv", 162, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == TRANSFER)==1 && (clk_counter == 32'sh0)==1 && (spi_clk_internal == (cpol ^ cpha))==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1249]), first, "../../rtl/spi_protocol_engine.sv", 162, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((spi_clk_internal == (cpol ^ cpha))==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1250]), first, "../../rtl/spi_protocol_engine.sv", 162, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((clk_counter == 32'sh0)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1251]), first, "../../rtl/spi_protocol_engine.sv", 162, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == TRANSFER)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1252]), first, "../../rtl/spi_protocol_engine.sv", 160, 18, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "elsif", "160-161");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1253]), first, "../../rtl/spi_protocol_engine.sv", 160, 44, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == IDLE)==1 && tx_valid_i==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1254]), first, "../../rtl/spi_protocol_engine.sv", 160, 44, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(tx_valid_i==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1255]), first, "../../rtl/spi_protocol_engine.sv", 160, 44, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == IDLE)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1256]), first, "../../rtl/spi_protocol_engine.sv", 158, 9, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "elsif", "158-159");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1257]), first, "../../rtl/spi_protocol_engine.sv", 158, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1258]), first, "../../rtl/spi_protocol_engine.sv", 158, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1259]), first, "../../rtl/spi_protocol_engine.sv", 157, 5, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "block", "157");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1260]), first, "../../rtl/spi_protocol_engine.sv", 171, 18, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "171-172");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1261]), first, "../../rtl/spi_protocol_engine.sv", 171, 19, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1262]), first, "../../rtl/spi_protocol_engine.sv", 171, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == TRANSFER)==1 && (clk_counter == 32'sh0)==1 && (spi_clk_internal == (cpol ^ (~ cpha)))==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1263]), first, "../../rtl/spi_protocol_engine.sv", 171, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((spi_clk_internal == (cpol ^ (~ cpha)))==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1264]), first, "../../rtl/spi_protocol_engine.sv", 171, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((clk_counter == 32'sh0)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1265]), first, "../../rtl/spi_protocol_engine.sv", 171, 68, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == TRANSFER)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1266]), first, "../../rtl/spi_protocol_engine.sv", 169, 9, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "elsif", "169-170");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1267]), first, "../../rtl/spi_protocol_engine.sv", 169, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1268]), first, "../../rtl/spi_protocol_engine.sv", 169, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1269]), first, "../../rtl/spi_protocol_engine.sv", 168, 5, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "block", "168");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1270]), first, "../../rtl/spi_protocol_engine.sv", 182, 18, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "if", "182-183");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1271]), first, "../../rtl/spi_protocol_engine.sv", 182, 19, ".tb_spi_controller.dut.spi_engine", "v_branch/spi_protocol_engine", "else", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1272]), first, "../../rtl/spi_protocol_engine.sv", 182, 64, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == STOP)==1 && (clk_counter == 32'sh0)==1 && (spi_clk_internal == cpol)==1) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1273]), first, "../../rtl/spi_protocol_engine.sv", 182, 64, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((spi_clk_internal == cpol)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1274]), first, "../../rtl/spi_protocol_engine.sv", 182, 64, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((clk_counter == 32'sh0)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1275]), first, "../../rtl/spi_protocol_engine.sv", 182, 64, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "((current_state == STOP)==0) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1276]), first, "../../rtl/spi_protocol_engine.sv", 180, 18, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "elsif", "180-181");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1277]), first, "../../rtl/spi_protocol_engine.sv", 178, 9, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "elsif", "178-179");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1278]), first, "../../rtl/spi_protocol_engine.sv", 178, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==0) => 1", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1279]), first, "../../rtl/spi_protocol_engine.sv", 178, 13, ".tb_spi_controller.dut.spi_engine", "v_expr/spi_protocol_engine", "(reset_n_i==1) => 0", "");
    vlSelf->__vlCoverInsert(&(vlSymsp->__Vcoverage[1280]), first, "../../rtl/spi_protocol_engine.sv", 177, 5, ".tb_spi_controller.dut.spi_engine", "v_line/spi_protocol_engine", "block", "177");
}
